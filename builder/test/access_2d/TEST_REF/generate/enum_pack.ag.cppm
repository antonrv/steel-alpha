//////////////////////////////////////
// 
// Autogenerated file. Do not modify. 
// 
//////////////////////////////////////

export module App.Enum;
import SteelRT.Util.Types;
import SteelRT.Util.Values;
import SteelRT.Util.Sequence;
import SteelRT.Instrument.FwDeclarations;
import <cstdio>;
export
namespace app{enum class call : enum_uint_t {pack_matrix_caller_matrix_allocate_0 = 2,pack_matrix_caller_matrix_deallocate_2 = 3,pack_matrix_caller_matrix_pack_1 = 4};using enabled_calls = util::sequence::enum_t<call,call::pack_matrix_caller_matrix_allocate_0,call::pack_matrix_caller_matrix_deallocate_2,call::pack_matrix_caller_matrix_pack_1>;}
export
namespace instrument::event{template <> struct type<app::call>{static constexpr const char * name = "call";
static constexpr const enum_type_id_t type_id = 0;
static constexpr bool instrumentable = true;
};template <> struct value<app::call::pack_matrix_caller_matrix_allocate_0>{static constexpr const char * name = "pack_matrix_caller_matrix_allocate_0";}
;template <> struct value<app::call::pack_matrix_caller_matrix_deallocate_2>{static constexpr const char * name = "pack_matrix_caller_matrix_deallocate_2";}
;template <> struct value<app::call::pack_matrix_caller_matrix_pack_1>{static constexpr const char * name = "pack_matrix_caller_matrix_pack_1";}
;}export
namespace app{enum class id : enum_uint_t {matrix_allocate = 2,matrix_deallocate = 3,matrix_pack = 4,pack_matrix_caller = 5};using enabled_ids = util::sequence::enum_t<id,id::matrix_allocate,id::matrix_deallocate,id::matrix_pack,id::pack_matrix_caller>;}
export
namespace instrument::event{template <> struct type<app::id>{static constexpr const char * name = "id";
static constexpr const enum_type_id_t type_id = 1;
static constexpr bool instrumentable = true;
};template <> struct value<app::id::matrix_allocate>{static constexpr const char * name = "matrix_allocate";}
;template <> struct value<app::id::matrix_deallocate>{static constexpr const char * name = "matrix_deallocate";}
;template <> struct value<app::id::matrix_pack>{static constexpr const char * name = "matrix_pack";}
;template <> struct value<app::id::pack_matrix_caller>{static constexpr const char * name = "pack_matrix_caller";}
;}export
namespace app{enum class impl : enum_uint_t {allocate_matrix = 2,deallocate_matrix = 3,pack_matrix = 4,pack_matrix_caller = 5};using enabled_impls = util::sequence::enum_t<impl,impl::allocate_matrix,impl::deallocate_matrix,impl::pack_matrix,impl::pack_matrix_caller>;}
export
namespace instrument::event{template <> struct type<app::impl>{static constexpr const char * name = "impl";
static constexpr const enum_type_id_t type_id = 2;
static constexpr bool instrumentable = true;
};template <> struct value<app::impl::allocate_matrix>{static constexpr const char * name = "allocate_matrix";}
;template <> struct value<app::impl::deallocate_matrix>{static constexpr const char * name = "deallocate_matrix";}
;template <> struct value<app::impl::pack_matrix>{static constexpr const char * name = "pack_matrix";}
;template <> struct value<app::impl::pack_matrix_caller>{static constexpr const char * name = "pack_matrix_caller";}
;}