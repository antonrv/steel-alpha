//////////////////////////////////////
// 
// Autogenerated file. Do not modify. 
// 
//////////////////////////////////////

export module App.Graph;
export import App.Enum;
import Plat.Enum;
import SteelRT.Util.Sequence;
import SteelRT.Util.Types;
import SteelRT.Util.Tuple;
import SteelRT.Util.FwDeclarations.App;
import SteelRT.Dep.Guard.Backend;
import SteelRT.Dep.Dim.View;
export
namespace app{
template <> struct traits<id::app_allocate_matrix>{using impl_sequence = util::sequence::enum_t<impl,impl::allocate_matrix>;};template <> struct traits<id::app_deallocate_matrix>{using impl_sequence = util::sequence::enum_t<impl,impl::deallocate_matrix>;};template <> struct traits<id::app_operate_matrix>{using impl_sequence = util::sequence::enum_t<impl,impl::operate_matrix_v1,impl::operate_matrix_v2>;};template <> struct traits<id::app_pack_matrix>{using impl_sequence = util::sequence::enum_t<impl,impl::pack_copy_matrix>;};template <> struct traits<id::app_unpack_matrix>{using impl_sequence = util::sequence::enum_t<impl,impl::unpack_copy_matrix>;};template <> struct traits<impl::allocate_matrix> {static constexpr impl this_impl = impl::allocate_matrix;
static constexpr id belonging_id = id::app_allocate_matrix;
static constexpr plat::arch arch_value = plat::arch::x86_64;
using arg_tuple_type = util::tuple_t<std::add_pointer_t<float>,unsigned,unsigned>;
using call_sequence = util::sequence::enum_t<call,call::operate_matrix_v2_app_allocate_matrix_0>;
using dispatch_sequence = util::sequence::enum_t<call>;
};template <> struct traits<impl::deallocate_matrix> {static constexpr impl this_impl = impl::deallocate_matrix;
static constexpr id belonging_id = id::app_deallocate_matrix;
static constexpr plat::arch arch_value = plat::arch::x86_64;
using arg_tuple_type = util::tuple_t<std::add_pointer_t<float>>;
using call_sequence = util::sequence::enum_t<call,call::operate_matrix_v2_app_deallocate_matrix_4>;
using dispatch_sequence = util::sequence::enum_t<call>;
};template <> struct traits<impl::pack_copy_matrix> {static constexpr impl this_impl = impl::pack_copy_matrix;
static constexpr id belonging_id = id::app_pack_matrix;
static constexpr plat::arch arch_value = plat::arch::x86_64;
using arg_tuple_type = util::tuple_t<std::add_pointer_t<float>,std::add_pointer_t<std::add_const_t<float>>,unsigned,unsigned,unsigned>;
using call_sequence = util::sequence::enum_t<call,call::operate_matrix_v2_app_pack_matrix_1>;
using dispatch_sequence = util::sequence::enum_t<call>;
};template <> struct traits<impl::unpack_copy_matrix> {static constexpr impl this_impl = impl::unpack_copy_matrix;
static constexpr id belonging_id = id::app_unpack_matrix;
static constexpr plat::arch arch_value = plat::arch::x86_64;
using arg_tuple_type = util::tuple_t<std::add_pointer_t<float>,std::add_pointer_t<std::add_const_t<float>>,unsigned,unsigned,unsigned>;
using call_sequence = util::sequence::enum_t<call,call::operate_matrix_v2_app_unpack_matrix_3>;
using dispatch_sequence = util::sequence::enum_t<call>;
};template <> struct traits<impl::operate_matrix_v1> {static constexpr impl this_impl = impl::operate_matrix_v1;
static constexpr id belonging_id = id::app_operate_matrix;
static constexpr plat::arch arch_value = plat::arch::x86_64;
using arg_tuple_type = util::tuple_t<std::add_pointer_t<float>,unsigned,unsigned>;
using call_sequence = util::sequence::enum_t<call,call::operate_matrix_v2_app_operate_matrix_2>;
using dispatch_sequence = util::sequence::enum_t<call>;
};template <> struct traits<impl::operate_matrix_v2> {static constexpr impl this_impl = impl::operate_matrix_v2;
static constexpr id belonging_id = id::app_operate_matrix;
static constexpr plat::arch arch_value = plat::arch::x86_64;
using arg_tuple_type = util::tuple_t<std::add_pointer_t<float>,unsigned,unsigned,unsigned,unsigned>;
using call_sequence = util::sequence::enum_t<call>;
using dispatch_sequence = util::sequence::enum_t<call,call::operate_matrix_v2_app_allocate_matrix_0,call::operate_matrix_v2_app_pack_matrix_1,call::operate_matrix_v2_app_operate_matrix_2,call::operate_matrix_v2_app_unpack_matrix_3,call::operate_matrix_v2_app_deallocate_matrix_4>;
};template <> struct traits<call::operate_matrix_v2_app_allocate_matrix_0> {static constexpr call this_call = call::operate_matrix_v2_app_allocate_matrix_0;
static constexpr impl belonging_impl = impl::allocate_matrix;
using arg_tuple_type = util::tuple_t<dep::guard::bnd::writable<float*>,unsigned,unsigned>;
};template <> struct traits<call::operate_matrix_v2_app_pack_matrix_1> {static constexpr call this_call = call::operate_matrix_v2_app_pack_matrix_1;
static constexpr impl belonging_impl = impl::pack_copy_matrix;
using arg_tuple_type = util::tuple_t<dep::guard::bnd::writable<float*>,dep::guard::bnd::readable<dep::dim::view<2,float>>,unsigned,unsigned,unsigned>;
};template <> struct traits<call::operate_matrix_v2_app_operate_matrix_2> {static constexpr call this_call = call::operate_matrix_v2_app_operate_matrix_2;
static constexpr impl belonging_impl = impl::operate_matrix_v1;
using arg_tuple_type = util::tuple_t<dep::guard::bnd::writable<float*>,unsigned,unsigned>;
};template <> struct traits<call::operate_matrix_v2_app_unpack_matrix_3> {static constexpr call this_call = call::operate_matrix_v2_app_unpack_matrix_3;
static constexpr impl belonging_impl = impl::unpack_copy_matrix;
using arg_tuple_type = util::tuple_t<dep::guard::bnd::writable<dep::dim::view<2,float>>,dep::guard::bnd::readable<float*>,unsigned,unsigned,unsigned>;
};template <> struct traits<call::operate_matrix_v2_app_deallocate_matrix_4> {static constexpr call this_call = call::operate_matrix_v2_app_deallocate_matrix_4;
static constexpr impl belonging_impl = impl::deallocate_matrix;
using arg_tuple_type = util::tuple_t<dep::guard::bnd::writable<float*>>;
};}