//////////////////////////////////////
// 
// Autogenerated file. Do not modify. 
// 
//////////////////////////////////////

export module App.Graph;
export import App.Enum;
import Plat.Enum;
import SteelRT.Util.Sequence;
import SteelRT.Util.Types;
import SteelRT.Util.Tuple;
import SteelRT.Util.FwDeclarations.App;
import SteelRT.Dep.Guard.Backend;
import SteelRT.Dep.Dim.View;
export
namespace app{
template <> struct traits<id::caller_wo>{using impl_sequence = util::sequence::enum_t<impl,impl::caller_wo>;};template <> struct traits<id::fooapp_wo>{using impl_sequence = util::sequence::enum_t<impl,impl::foo_wo>;};template <> struct traits<impl::foo_wo> {static constexpr impl this_impl = impl::foo_wo;
static constexpr id belonging_id = id::fooapp_wo;
static constexpr plat::arch arch_value = plat::arch::x86_64;
using arg_tuple_type = util::tuple_t<std::add_pointer_t<float>,std::add_const_t<unsigned>>;
using call_sequence = util::sequence::enum_t<call,call::caller_wo_fooapp_wo_0,call::caller_wo_fooapp_wo_1>;
using dispatch_sequence = util::sequence::enum_t<call>;
};template <> struct traits<impl::caller_wo> {static constexpr impl this_impl = impl::caller_wo;
static constexpr id belonging_id = id::caller_wo;
static constexpr plat::arch arch_value = plat::arch::x86_64;
using arg_tuple_type = util::tuple_t<std::add_pointer_t<float>,std::add_const_t<unsigned>,std::add_const_t<unsigned>>;
using call_sequence = util::sequence::enum_t<call>;
using dispatch_sequence = util::sequence::enum_t<call,call::caller_wo_fooapp_wo_0,call::caller_wo_fooapp_wo_1>;
};template <> struct traits<call::caller_wo_fooapp_wo_0> {static constexpr call this_call = call::caller_wo_fooapp_wo_0;
static constexpr impl belonging_impl = impl::foo_wo;
using arg_tuple_type = util::tuple_t<dep::guard::bnd::writable<dep::dim::view<1,float>>,const unsigned>;
};template <> struct traits<call::caller_wo_fooapp_wo_1> {static constexpr call this_call = call::caller_wo_fooapp_wo_1;
static constexpr impl belonging_impl = impl::foo_wo;
using arg_tuple_type = util::tuple_t<dep::guard::bnd::writable<dep::dim::view<1,float>>,unsigned>;
};}