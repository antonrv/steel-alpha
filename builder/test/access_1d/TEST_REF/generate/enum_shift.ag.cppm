//////////////////////////////////////
// 
// Autogenerated file. Do not modify. 
// 
//////////////////////////////////////

export module App.Enum;
import SteelRT.Util.Types;
import SteelRT.Util.Values;
import SteelRT.Util.Sequence;
import SteelRT.Instrument.FwDeclarations;
import <cstdio>;
export
namespace app{enum class call : enum_uint_t {caller_shift_end_foo_shift_end_0 = 2,caller_shift_literal_foo_shift_literal_0 = 3,caller_shift_start_end_foo_shift_start_end_0 = 4,caller_shift_start_foo_shift_start_0 = 5};using enabled_calls = util::sequence::enum_t<call,call::caller_shift_end_foo_shift_end_0,call::caller_shift_literal_foo_shift_literal_0,call::caller_shift_start_end_foo_shift_start_end_0,call::caller_shift_start_foo_shift_start_0>;}
export
namespace instrument::event{template <> struct type<app::call>{static constexpr const char * name = "call";
static constexpr const enum_type_id_t type_id = 0;
static constexpr bool instrumentable = true;
};template <> struct value<app::call::caller_shift_end_foo_shift_end_0>{static constexpr const char * name = "caller_shift_end_foo_shift_end_0";}
;template <> struct value<app::call::caller_shift_literal_foo_shift_literal_0>{static constexpr const char * name = "caller_shift_literal_foo_shift_literal_0";}
;template <> struct value<app::call::caller_shift_start_end_foo_shift_start_end_0>{static constexpr const char * name = "caller_shift_start_end_foo_shift_start_end_0";}
;template <> struct value<app::call::caller_shift_start_foo_shift_start_0>{static constexpr const char * name = "caller_shift_start_foo_shift_start_0";}
;}export
namespace app{enum class id : enum_uint_t {caller_shift_end = 2,caller_shift_literal = 3,caller_shift_start = 4,caller_shift_start_end = 5,foo_shift_end = 6,foo_shift_literal = 7,foo_shift_start = 8,foo_shift_start_end = 9};using enabled_ids = util::sequence::enum_t<id,id::caller_shift_end,id::caller_shift_literal,id::caller_shift_start,id::caller_shift_start_end,id::foo_shift_end,id::foo_shift_literal,id::foo_shift_start,id::foo_shift_start_end>;}
export
namespace instrument::event{template <> struct type<app::id>{static constexpr const char * name = "id";
static constexpr const enum_type_id_t type_id = 1;
static constexpr bool instrumentable = true;
};template <> struct value<app::id::caller_shift_end>{static constexpr const char * name = "caller_shift_end";}
;template <> struct value<app::id::caller_shift_literal>{static constexpr const char * name = "caller_shift_literal";}
;template <> struct value<app::id::caller_shift_start>{static constexpr const char * name = "caller_shift_start";}
;template <> struct value<app::id::caller_shift_start_end>{static constexpr const char * name = "caller_shift_start_end";}
;template <> struct value<app::id::foo_shift_end>{static constexpr const char * name = "foo_shift_end";}
;template <> struct value<app::id::foo_shift_literal>{static constexpr const char * name = "foo_shift_literal";}
;template <> struct value<app::id::foo_shift_start>{static constexpr const char * name = "foo_shift_start";}
;template <> struct value<app::id::foo_shift_start_end>{static constexpr const char * name = "foo_shift_start_end";}
;}export
namespace app{enum class impl : enum_uint_t {caller_shift_end = 2,caller_shift_literal = 3,caller_shift_start = 4,caller_shift_start_end = 5,foo_shift_end = 6,foo_shift_literal = 7,foo_shift_start = 8,foo_shift_start_end = 9};using enabled_impls = util::sequence::enum_t<impl,impl::caller_shift_end,impl::caller_shift_literal,impl::caller_shift_start,impl::caller_shift_start_end,impl::foo_shift_end,impl::foo_shift_literal,impl::foo_shift_start,impl::foo_shift_start_end>;}
export
namespace instrument::event{template <> struct type<app::impl>{static constexpr const char * name = "impl";
static constexpr const enum_type_id_t type_id = 2;
static constexpr bool instrumentable = true;
};template <> struct value<app::impl::caller_shift_end>{static constexpr const char * name = "caller_shift_end";}
;template <> struct value<app::impl::caller_shift_literal>{static constexpr const char * name = "caller_shift_literal";}
;template <> struct value<app::impl::caller_shift_start>{static constexpr const char * name = "caller_shift_start";}
;template <> struct value<app::impl::caller_shift_start_end>{static constexpr const char * name = "caller_shift_start_end";}
;template <> struct value<app::impl::foo_shift_end>{static constexpr const char * name = "foo_shift_end";}
;template <> struct value<app::impl::foo_shift_literal>{static constexpr const char * name = "foo_shift_literal";}
;template <> struct value<app::impl::foo_shift_start>{static constexpr const char * name = "foo_shift_start";}
;template <> struct value<app::impl::foo_shift_start_end>{static constexpr const char * name = "foo_shift_start_end";}
;}